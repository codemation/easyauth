name: Build EasyAuth

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:

  linter:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10.8"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Lint
        run: pre-commit run --all-files
  test-easyauth-postgres:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9,3.10.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: build and run auth server image
        run: |
          docker build  -f docker/test-docker/Dockerfile-postgres -t joshjamison/easyauth:postgres .
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Downloads a copy of the code in your repository before running CI tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install asyncpg==0.24.0 psycopg2==2.9.2
      - name: Test EasyAuth - Server
        run: |
          export TEST_INIT_PASSWORD=easyauth
          export  ISSUER=EasyAuth
          export  SUBJECT=EasyAuthAuth
          export  AUDIENCE=EasyAuthApis
          export  KEY_PATH=$(pwd)
          export  KEY_NAME=test_key
          export ENV=postgres
          pytest tests/test_server_api.py -s
      - name: Test EasyAuth Client
        run: |
          export ENV=postgres
          pytest tests/test_client_api.py -s
  test-easyauth-client-mysql:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8,3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: build and run auth server image
        run: |
          docker build  -f docker/test-docker/Dockerfile-mysql -t joshjamison/easyauth:mysql .
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Downloads a copy of the code in your repository before running CI tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install aiomysql==0.0.21 cryptography==3.4.8 mysqlclient==2.0.3
      - name: Test EasyAuth - Server
        run: |
          export TEST_INIT_PASSWORD=easyauth
          export  ISSUER=EasyAuth
          export  SUBJECT=EasyAuthAuth
          export  AUDIENCE=EasyAuthApis
          export  KEY_PATH=$(pwd)
          export  KEY_NAME=test_key
          export ENV=mysql
          docker-compose -f docker/test-docker/auth-mysql.yml up -d db
          echo "Sleeping to allow db to start"
          sleep 30
          pytest tests/test_server_api.py -s
      - name: Test EasyAuth Client
        run: |
          export ENV=mysql
          pytest tests/test_client_api.py -s
  test-easyauth-client-sqlite:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8,3.9,3.10.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: build and run auth server image
        run: |
          docker build  -f docker/test-docker/Dockerfile-sqlite -t joshjamison/easyauth:sqlite .
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Downloads a copy of the code in your repository before running CI tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Test EasyAuth - Server
        run: |
          export TEST_INIT_PASSWORD=easyauth
          export  ISSUER=EasyAuth
          export  SUBJECT=EasyAuthAuth
          export  AUDIENCE=EasyAuthApis
          export  KEY_PATH=$(pwd)
          export  KEY_NAME=test_key
          export ENV=sqlite
          pytest tests/test_server_api.py -s
      - name: Test EasyAuth - Client
        run: |
          export ENV=sqlite
          pytest tests/test_client_api.py -s